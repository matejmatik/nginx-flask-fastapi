services:
  nginx:
    extends:
      file: compose_partials/nginx-service.yaml
      service: nginx
    command: ["/app/start.sh"]
  flask-dash:
    extends:
      file: compose_partials/flask-dash-service.yaml
      service: flask-dash
    environment:
      - SODO_SWAGGER_API_PROD_HOST=${SODO_SWAGGER_API_PROD_HOST}
      - SODO_SWAGGER_API_TEST_HOST=${SODO_SWAGGER_API_TEST_HOST}
      - SODO_SWAGGER_API_USER=${SODO_SWAGGER_API_USER}
      - SODO_SWAGGER_API_PASSWORD=${SODO_SWAGGER_API_PASSWORD}
    command: ["gunicorn", "application.main:app", "--workers", "1", "--bind", "0.0.0.0:8080", "--log-level", "${FLASK_LOG_LEVEL?Variable not set}", "--reload"]
    develop:
      watch:
        - action: sync
          path: ./frontend/application
          target: /project/application
          ignore:
            - .venv/
        - action: rebuild
          path: ./pyproject.toml
  backend:
    extends:
      file: compose_partials/backend-service.yaml
      service: backend
    command: ["uvicorn", "application.main:app", "--host", "0.0.0.0", "--port", "3000", "--log-level", "${BACKEND_LOG_LEVEL?Variable not set}", "--reload"]
    develop:
      watch:
        - action: sync
          path: ./backend/application
          target: /project/application
          ignore:
            - .venv/
        - action: rebuild
          path: ./pyproject.toml
  redis:
    extends:
      file: compose_partials/redis-service.yaml
      service: redis
    command: ["redis-server", "--appendonly", "no"]
volumes:
  backend-data:
    driver: local
  redis-data:
    driver: local